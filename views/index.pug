extends master.pug
block head
    script.
      function plus(inc_by, elem_id, max){
        let elem; let count;

        elem = document.getElementById(elem_id);
        count = ~~elem.value;
        console.log(elem.value, max)
        
        
        if (elem.value < max){
          count += inc_by;
          elem.value = count;
        }
      }
      function minus(inc_by, elem_id, min, check_id){
        let elem; let count;

        elem = document.getElementById(elem_id);
        count = ~~elem.value;

        
        if (check_id != null && (document.getElementById(check_id)).value==0 && count-inc_by == 0)
        {
          return;
        }

        else if (elem.value > min) {
          count -= inc_by;
          elem.value = count;
        }  
      }    
block content    
    ul.pages
      li.chat.page
        include header
        #lobbyContainer     
          #userboard
             #user_container
          #gameContainer
            p#timer
            p#riddle
            p#answer
            #leaderBoard
          |         
          .chatContainer#chatbox
            ul.messages
          |       
          input.inputMessage(placeholder='Type here...')
      li.gameButtonsPage.page
        .gameButtonToggle
          p#gameButtonToggleText ⏵
        .gameButtonsContainer
          button.gameAction.joinGame(placeholder='Join Game') New Public Game
          |          
          br
          |
          button.gameAction.createPrivateGame(placeholder='Create New Game') New Private Game
          |          
          br
          |
          button.gameAction.joinPrivateGame(placeholder='Join Existing Game') Join Private Game
          |
          br
      li.login.page
        include header
        #mainpageContainer
          #user_inputs
            #avatar_select
              .avatar.left_btn
                button.select_button(type='button') ◀
                button.select_button(type='button') ◀ 
                button.select_button(type='button') ◀
              .avatar#avatar_image
                .shape.avi_head.circle#av
                  .shape-inner.avi_head
                      .shape-front.avi_head 
                        .face
                          br
                          p#face ^.^
                      .shape-back.avi_head
                        p#rmt RMT
              .avatar.right_btn
                button.select_button(type='button') ▶
                button.select_button(type='button') ▶
                button.select_button(type='button') ▶
            |                 
            p.label1  choose your fighter
            #usernamecontainer                 
                input.input1.usernameInput(type='text', name='username', placeholder=' ☺', required='', maxlength="20")
                |
                input#go(type='submit', value='Go!', onkeypress='return event.keyCode != 13')
                |                       
                p.label1  nickname
          #info_container
            button.accordion(id='collapse in', data-parent='#accordion') How to Play
            |             
            .panel(style='max-height:70px;')
              p.small-text Race against the clock and compete against others to answer riddles! Click "Go!" to start.
            |             
            button.accordion(data-parent='#accordion') Updates
            |
            .panel
              p.small-text 9/10 Ver. 0 - RMT is released for testing!
            |             
            button.accordion(data-parent='#accordion') About
            |             
            .panel
              p.small-text Riddle Me This! is a timed riddle-guessing game in which you can compete against strangers or friends. 
        |
        include footer
        |
        script.
          var acc = document.getElementsByClassName("accordion");
          var i;

          for (i = 0; i < acc.length; i++) {
            acc[i].addEventListener("click", function() {
              this.classList.toggle("active");
              var panel = this.nextElementSibling;
              if (panel.style.maxHeight)
              {
                panel.style.maxHeight = null;
              } 

              else {
                panel.style.maxHeight = panel.scrollHeight + "px";
              } 
            });
          }

      

